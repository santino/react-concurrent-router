name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x, 24.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Use Node ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Yarn
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-yarn-node-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-node-${{ matrix.node-version }}-
          ${{ runner.os }}-yarn-node-
          ${{ runner.os }}-yarn-
          ${{ runner.os }}-
    - name: Install dependencies
      run: yarn install --ignore-engines && git checkout yarn.lock

  test-and-coverage:
    needs: setup
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x, 24.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Use Node ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Yarn
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-yarn-node-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-node-${{ matrix.node-version }}-
          ${{ runner.os }}-yarn-node-
          ${{ runner.os }}-yarn-
          ${{ runner.os }}-
    - name: Install dependencies
      run: yarn install --ignore-engines && git checkout yarn.lock
    - name: Run tests plus coverage
      run: yarn coverage
    - name: Track coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        flag-name: run-node-${{ matrix.node-version }}
        parallel: true

  coveralls-finished:
    needs: test-and-coverage
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true

  build-plus-sizecheck:
    needs: setup
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x, 24.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Use Node ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Yarn
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-yarn-node-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-node-${{ matrix.node-version }}-
          ${{ runner.os }}-yarn-node-
          ${{ runner.os }}-yarn-
          ${{ runner.os }}-
    - name: Install dependencies
      run: yarn install --ignore-engines && git checkout yarn.lock
    - name: Build package
      run: yarn build
    - name: Check bundle-size
      env:
        CI_BRANCH_BASE: main
        BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
      run: yarn bundlewatch
